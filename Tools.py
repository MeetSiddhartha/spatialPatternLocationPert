# For the sake of the commercialization requirements in the plan, we obfuscated this part of the code.
import random #line:1
import math #line:2
import numpy as np #line:3
def Print_Matrix (OOOO00O0O0OO0OOOO ):#line:5
    for O0OOO0OO00OO000O0 in range (0 ,len (OOOO00O0O0OO0OOOO )):#line:6
        print (OOOO00O0O0OO0OOOO [O0OOO0OO00OO000O0 ])#line:7
def Sequencelize_Matrix (O0O0000OO0O00000O ):#line:9
    O00OOO000O000O0O0 =1 #line:10
    for OO0OOO000000O0O00 in range (0 ,len (O0O0000OO0O00000O )):#line:11
        for O0OOO000000000OO0 in range (0 ,len (O0O0000OO0O00000O )):#line:12
            O0O0000OO0O00000O [OO0OOO000000O0O00 ][O0OOO000000000OO0 ]=O00OOO000O000O0O0 #line:13
            O00OOO000O000O0O0 +=1 #line:14
def demension_one_to_two (O0O0OOO0O00O0OO00 ,OO0000O0O0O000O0O ):#line:16
    OOO0OOOO00O000000 =(O0O0OOO0O00O0OO00 -1 )//OO0000O0O0O000O0O #line:17
    O0O0OO0OOOOO0OOOO =(O0O0OOO0O00O0OO00 -1 )%OO0000O0O0O000O0O #line:18
    return [OOO0OOOO00O000000 ,O0O0OO0OOOOO0OOOO ]#line:19
def demension_two_to_one (OO0OO0O0OO00O0000 ,OOO000000O000000O ,O0OOO0OOOO0O0OO0O ):#line:21
    return OO0OO0O0OO00O0000 *O0OOO0OOOO0O0OO0O +OOO000000O000000O +1 #line:22
def calculateDistance (OO00O0O000O0000O0 ,OOO000OOO0O0OO000 ,OO0OOOO0OOO00OOO0 ):#line:24
    [O0O000O00O00OOO00 ,O00OO0OO00OO0O0O0 ]=demension_one_to_two (OO00O0O000O0000O0 ,OO0OOOO0OOO00OOO0 )#line:25
    [O0OOO000O000O0O00 ,O0O0O00OOOOOOO0O0 ]=demension_one_to_two (OOO000OOO0O0OO000 ,OO0OOOO0OOO00OOO0 )#line:26
    OOO00000OO0O00OOO =abs (O0OOO000O000O0O00 -O0O000O00O00OOO00 )#line:27
    OO0O00O0O0O00OOO0 =abs (O0O0O00OOOOOOO0O0 -O00OO0OO00OO0O0O0 )#line:28
    O00O0OO00OOO000OO =(OOO00000OO0O00OOO **2 +OO0O00O0O0O00OOO0 **2 )**0.5 #line:29
    return O00O0OO00OOO000OO #line:30
def calculateDistanceMatrix (OOO00O0OO0000OO00 ,OO0O0OOOO0OO00O0O ,O0OO00O0O0OOO0O00 ,OO0OOO0OO0O0OO000 ):#line:33
    for O000OO00OOO0O00O0 in range (0 ,len (OOO00O0OO0000OO00 )*len (OOO00O0OO0000OO00 [0 ])):#line:34
        O00O00O0O000OOOOO =demension_one_to_two (O000OO00OOO0O00O0 +1 ,OO0OOO0OO0O0OO000 )#line:35
        OO0O0OOOO0OO00O0O [O00O00O0O000OOOOO [0 ]][O00O00O0O000OOOOO [1 ]]=calculateDistance (O000OO00OOO0O00O0 +1 ,O0OO00O0O0OOO0O00 ,OO0OOO0OO0O0OO000 )#line:38
def calculateDistanceMatrix_PatternPreserving (O0OOOO00O00O00000 ,OOO000O0O0O0OO000 ,OO0O0000OO0000O0O ,OO0OOO0O0OO0O0O0O ,OO0000O00OO00O0OO ):#line:40
    OO00OO0O00OO00O0O =0 #line:41
    for O00O0O000OO0OOO00 in OO0000O00OO00O0OO :#line:42
        OO00OO0O00OO00O0O +=O00O0O000OO0OOO00 #line:43
    for O0OOO00OOOOO0OO00 in range (0 ,len (O0OOOO00O00O00000 )*len (O0OOOO00O00O00000 [0 ])):#line:44
        OOOOO0O0OO0OOO000 =demension_one_to_two (O0OOO00OOOOO0OO00 +1 ,OO0OOO0O0OO0O0O0O )#line:45
        OOOOO0OOO0000O000 =O0OOO00OOOOO0OO00 #line:46
        OOO00OOO00OO0OO00 =abs (OO0000O00OO00O0OO [OOOOO0OOO0000O000 ]-OO0000O00OO00O0OO [OO0O0000OO0000O0O -1 ])/OO00OO0O00OO00O0O #line:47
        OOO000O0O0O0OO000 [OOOOO0O0OO0OOO000 [0 ]][OOOOO0O0OO0OOO000 [1 ]]=calculateDistance (O0OOO00OOOOO0OO00 +1 ,OO0O0000OO0000O0O ,OO0OOO0O0OO0O0O0O )*OOO00OOO00OO0OO00 #line:50
def irrationalLocationList (OO0O0O0000O00OOOO ,OO0OOOOO0OOO0OOOO ,O00O0O0O00O00O000 ):#line:52
    O00OO00O00O00OO0O =len (O00O0O0O00O00O000 )*len (O00O0O0O00O00O000 [0 ])*OO0O0O0000O00OOOO #line:53
    O0OO0O0O0OOOOO0OO =random .sample ([O000O00OOO0OOOOOO for O000O00OOO0OOOOOO in range (1 ,len (O00O0O0O00O00O000 )*len (O00O0O0O00O00O000 [0 ])+1 )],int (O00OO00O00O00OO0O ))#line:54
    while OO0OOOOO0OOO0OOOO in O0OO0O0O0OOOOO0OO :#line:55
        OO00O0OO0OO000O00 =random .sample (list (set ([O0O0OO00OO0OO0OOO for O0O0OO00OO0OO0OOO in range (1 ,len (O00O0O0O00O00O000 )*len (O00O0O0O00O00O000 [0 ])+1 )])-set (O0OO0O0O0OOOOO0OO )),1 )#line:56
        O0OO0O0O0OOOOO0OO [O0OO0O0O0OOOOO0OO .index (OO0OOOOO0OOO0OOOO )]=OO00O0OO0OO000O00 [0 ]#line:57
    return O0OO0O0O0OOOOO0OO #line:58
def calculateWeightMatrix (O000OOOO0O00OO0O0 ,O00O0O000OO00O0O0 ,OOOOOOO000O00O00O ,OOOOO000OOOO00OOO ):#line:60
    O00OO00OOOOO00000 =0 #line:61
    for OOO000O0O0000O00O in range (1 ,O00O0O000OO00O0O0 *O00O0O000OO00O0O0 +1 ):#line:62
        OO000O0O00OOO000O =demension_one_to_two (OOO000O0O0000O00O ,O00O0O000OO00O0O0 )#line:63
        O0OOOO0000O0OOO0O =O000OOOO0O00OO0O0 *(-1 )*OOOOOOO000O00O00O [OO000O0O00OOO000O [0 ]][OO000O0O00OOO000O [1 ]]/2 #line:64
        OO00OO0OOO00O0000 =math .exp (O0OOOO0000O0OOO0O )#line:65
        OOOOO000OOOO00OOO [OO000O0O00OOO000O [0 ]][OO000O0O00OOO000O [1 ]]=OO00OO0OOO00O0000 #line:66
        O00OO00OOOOO00000 +=OO00OO0OOO00O0000 #line:67
    return O00OO00OOOOO00000 #line:68
def calculateWeightMatrix_noSelf (O0O0OOOO000000OO0 ,O000OOO000OOO000O ,O0O0OO0O00000O0OO ,OO00OO0O000OO0OOO ,O0O0OO0O0OO0OOO00 ):#line:70
    O0O000OO0O0O0O00O =0 #line:71
    for O0OO00OOOOOO00OO0 in range (1 ,O000OOO000OOO000O *O000OOO000OOO000O +1 ):#line:72
        O000OOO00OOOO00OO =demension_one_to_two (O0OO00OOOOOO00OO0 ,O000OOO000OOO000O )#line:73
        OO0OO000OO00OO000 =O0O0OOOO000000OO0 *(-1 )*O0O0OO0O00000O0OO [O000OOO00OOOO00OO [0 ]][O000OOO00OOOO00OO [1 ]]/2 #line:74
        OO00OOO00OOO0OOOO =math .exp (OO0OO000OO00OO000 )#line:75
        OO00OO0O000OO0OOO [O000OOO00OOOO00OO [0 ]][O000OOO00OOOO00OO [1 ]]=OO00OOO00OOO0OOOO #line:76
        O0O000OO0O0O0O00O +=OO00OOO00OOO0OOOO #line:77
    O0O0000O0OOOOO0OO =demension_one_to_two (O0O0OO0O0OO0OOO00 ,O000OOO000OOO000O )#line:78
    O0O000OO0O0O0O00O -=OO00OO0O000OO0OOO [O0O0000O0OOOOO0OO [0 ]][O0O0000O0OOOOO0OO [1 ]]#line:79
    OO00OO0O000OO0OOO [O0O0000O0OOOOO0OO [0 ]][O0O0000O0OOOOO0OO [1 ]]=0 #line:80
    return O0O000OO0O0O0O00O #line:81
def calculateProbabiliityMatrix (O0000OO0O000000OO ,OOO00O00OOO0OOO00 ,O0O0000OO0000OOO0 ,OOOOOO0O00O00OO0O ,OO0OOOO0O00O0OO00 ,O00OO0O000OO0000O ):#line:83
    O0O0OO0O0OO000OO0 =0 #line:84
    O00000000O0O0000O =0 #line:85
    for O000OOOOO0OOOOOOO in OOOOOO0O00O00OO0O :#line:86
        O0O00O0OO0O000OO0 =demension_one_to_two (O000OOOOO0OOOOOOO ,O00OO0O000OO0000O )#line:87
        O0O0OO0O0OO000OO0 +=OOO00O00OOO0OOO00 [O0O00O0OO0O000OO0 [0 ]][O0O00O0OO0O000OO0 [1 ]]#line:88
        OOO00O00OOO0OOO00 [O0O00O0OO0O000OO0 [0 ]][O0O00O0OO0O000OO0 [1 ]]=0 #line:89
    O0OOO0000O0O0OO00 =demension_one_to_two (O0O0000OO0000OOO0 ,O00OO0O000OO0000O )#line:90
    O00000O0OOO000000 =OO0OOOO0O00O0OO00 -O0O0OO0O0OO000OO0 #line:94
    for O000OOOOO0OOOOOOO in range (1 ,O00OO0O000OO0000O *O00OO0O000OO0000O +1 ):#line:95
        O0O00O0OO0O000OO0 =demension_one_to_two (O000OOOOO0OOOOOOO ,O00OO0O000OO0000O )#line:96
        O0000OO0O000000OO [O0O00O0OO0O000OO0 [0 ]][O0O00O0OO0O000OO0 [1 ]]=OOO00O00OOO0OOO00 [O0O00O0OO0O000OO0 [0 ]][O0O00O0OO0O000OO0 [1 ]]/O00000O0OOO000000 #line:98
        O00000000O0O0000O +=O0000OO0O000000OO [O0O00O0OO0O000OO0 [0 ]][O0O00O0OO0O000OO0 [1 ]]#line:99
    return O00000000O0O0000O #line:100
def sampleFromProbabiliity (O00000OO0O0O000O0 ,OOO00O000OO00OO00 ,O0O000000O0OO0O00 ):#line:102
    O000OOO00OOO0O0OO =[]#line:103
    for OOOOO00OOO0O0OO00 in range (0 ,OOO00O000OO00OO00 ):#line:104
        O000OOO00OOO0O0OO .extend (O00000OO0O0O000O0 [OOOOO00OOO0O0OO00 ])#line:105
    OO0000O0O00OO0OO0 =np .arange (OOO00O000OO00OO00 *OOO00O000OO00OO00 )+1 #line:106
    O0O000OOO000O0OO0 =np .random .choice (OO0000O0O00OO0OO0 ,O0O000000O0OO0O00 ,p =np .array (O000OOO00OOO0O0OO ))#line:107
    return O0O000OOO000O0OO0